name: kittens-action
on: [push]

jobs:
  # ruby_checks:
  #   runs-on: ubuntu-latest

  #   services:
  #     postgres:
  #       image: postgres:13.3
  #       env:
  #         POSTGRES_DB: kittens_store_test
  #         POSTGRES_PORT: 5432
  #         POSTGRES_USER: postgres_user
  #         POSTGRES_PASSWORD: postgres_password
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #       ports:
  #         - 5432:5432

  #   steps:
  #     - name: checkout
  #       uses: actions/checkout@v2
  #     - name: set up Ruby
  #       uses: ruby/setup-ruby@v1
  #       with:
  #         ruby-version: 2.4.9
  #     - name: install dependencies
  #       run: bundle install --jobs 3 --retry 3
  #     - name: rubocop
  #       run: bundle exec rubocop
  #     - name: rspec
  #       run: sh scripts/test.sh
  #       env:
  #         DATABASE_URL: postgres://postgres_user:postgres_password@localhost:5432/kittens_store_test
  #         RACK_ENV: test

  push_image:
    runs-on: ubuntu-latest
    # needs: ruby_checks
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-3
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: kittens_ecr
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
