name: Main Workflow
on:
  push:
    branches:
      - master

jobs:
  # push_image:
  #   runs-on: ubuntu-latest
  #   # needs: ruby_checks
  #   steps:
  #     - name: checkout
  #       uses: actions/checkout@v2
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: eu-west-3
  #     - name: Login to Amazon ECR
  #       id: login-ecr
  #       uses: aws-actions/amazon-ecr-login@v1
  #     - name: Build, tag, and push image to Amazon ECR
  #       env:
  #         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
  #         ECR_REPOSITORY: kittens-store
  #         IMAGE_TAG: ${{ github.sha }}
  #       run: |
  #         docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
  #         docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
  #     - name: Lint Helm
  #       run: helm lint ops/deployment
  #     - name: Update kubeconfig
  #       run: aws eks update-kubeconfig --region eu-west-3 --name main_eks_cluster
  #     - name: Get Pods
  #       run: kubectl get pods -A
  #     - name: Deploy to EKS
  #       run: >
  #         helm upgrade kittens ./ops/deployment
  #         --install --wait --atomic --debug
  #         -f=ops/deployment/values.yaml

  infrastructure_apply:
    name: Apply Terraform Changes
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'ops/infrastructure/live_ci'
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: false
      - name: Terraform Init
        id: init
        run: terraform init
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
      - name: Terraform Apply
        run: terraform apply --auto-approve
        continue-on-error: false
      - name: Save Artifacts
        run: |
          mkdir -p ../artifacts
          terraform-bin output -raw database_url > ../artifacts/database_url.txt
          terraform-bin output -raw eks_cluster_name > ../artifacts/eks_cluster_name.txt
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: terraform-artifacts
          path: ops/artifacts
          retention-days: 5
